{
	"name": "KQLStormEvents",
	"properties": {
		"content": {
			"query": ".create table StormEvents (StartTime: datetime, EndTime: datetime, EpisodeId: int, EventId: int, State: string, EventType: string, InjuriesDirect: int, InjuriesIndirect: int, DeathsDirect: int, DeathsIndirect: int, DamageProperty: int, DamageCrops: int, Source: string, BeginLocation: string, EndLocation: string, BeginLat: real, BeginLon: real, EndLat: real, EndLon: real, EpisodeNarrative: string, EventNarrative: string, StormSummary: dynamic)\n\n.ingest into table StormEvents 'https://kustosamplefiles.blob.core.windows.net/samplefiles/StormEvents.csv?sv=2019-12-12&ss=b&srt=o&sp=r&se=2022-09-05T02:23:52Z&st=2020-09-04T18:23:52Z&spr=https&sig=VrOfQMT1gUrHltJ8uhjYcCequEcfhjyyMX%2FSc3xsCy4%3D' with (ignoreFirstRecord=true)\n\n//.ingest into table StormEvents 'https://kustosamples.blob.core.windows.net/samplefiles/StormEvents.csv' with (ignoreFirstRecord=true)\n\nStormEvents \n| sort by StartTime desc \n| project StartTime, EndTime, State, EventType, DamageProperty, EpisodeNarrative | take 10\n\nStormEvents\n| summarize event_count=count(), mid = avg(BeginLat) by State\n| sort by mid\n| where event_count > 1800\n| project State, event_count\n| render columnchart",
			"metadata": {
				"language": "kql"
			},
			"currentConnection": {
				"poolName": "rfsynapsedataexplorer",
				"databaseName": "rfsdxdatabase"
			}
		},
		"type": "KqlQuery"
	}
}